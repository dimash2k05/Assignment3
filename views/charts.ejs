<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ApexCharts Example</title>
    <!-- Include the ApexCharts library -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <a class="nav-link" href="/history"><%= translate.game1 %><span class="sr-only"></span></a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="/historyUser"><%= translate.historyUser %><span class="sr-only"></span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/country"><%= translate.game2 %></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin"><%= translate.admin %></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/charts"><%= translate.charts %></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/pdfdownload"><%= translate.pdfdownload %></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/translate">Translate</a>
            </li>
        </ul>
    </div>
</nav>
<div class="row" style="display: flex; align-items: center; justify-content: center; max-width: 1200px;">
    <div style="width: 547px;">
        <h2><%= translate.historyList %></h2>
        <div id="historyData"></div>
    </div>
    <div style="width: 547px;">
        <h2><%= translate.stat %></h2>
        <div id="commonData"></div>
    </div>
    <div style="width: 547px;">
        <h2>Количество Ваших игр</h2>
        <div id="count"></div>
    </div>
    <div style="width: 547px;">
        <h2>Количество пользователей</h2>
        <div id="users"></div>
    </div>
    <div style="width: 547px;">
        <h2>Всего попыток по стране</h2>
        <div id="countryCount"></div>
    </div>
    <div style="width: 547px;">
        <h2>Всего попыток по Истории</h2>
        <div id="historyCount"></div>
    </div>
</div>

<script>
    let usersData = '<%- JSON.stringify(users) %>'
    usersData = JSON.parse(usersData)



    let history = '<%- JSON.stringify(history) %>'
    history = JSON.parse(history)
    let userHistory = '<%- JSON.stringify(userHistory) %>'
    userHistory = JSON.parse(userHistory)
    console.log(userHistory)
    let country = '<%- JSON.stringify(country) %>'
    country = JSON.parse(country)
    // Define the chart options and data
    const options = {
        chart: {
            type: 'bar'
        },
        series: [{
            name: 'Sales',
            data: [30, 40, 35, 50, 49, 60, 70, 91, 125]
        }],
        xaxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']
        }
    };

    // Initialize the chart


    const historyData = new ApexCharts(document.querySelector("#historyData"), {
        chart: {
            type: 'pie'
        },
        series: [history.length]
    });
    const commonData = new ApexCharts(document.querySelector("#commonData"), {
        series: [userHistory.filter((item) => {
            return item.type == "auth"
        }).length, userHistory.filter((item) => {
            return item.type == "history"
        }).length, userHistory.filter((item) => {
            return item.type == "country"
        }).length, userHistory.filter((item) => {
            return item.type == "pdfdownload"
        }).length, userHistory.filter((item) => {
            return item.type == "edit"
        }).length],
        chart: {
            width: 380,
            type: 'pie',
        },
        labels: ["Авторизаций", "История", "Страны", "Скачиваний", "Редактирований"],
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                    width: 200
                },
                legend: {
                    position: 'bottom'
                }
            }
        }]
    });
    const count = new ApexCharts(document.querySelector("#count"), {
        chart: {
            type: 'pie'
        },
        series: [userHistory.filter((item) => {
            return item.type == "country" || item.type == "history"
        }).length]
    });
    const users = new ApexCharts(document.querySelector("#users"), {
        chart: {
            type: 'pie'
        },
        labels: ["Администраторов", "Пользователей"],
        series: [usersData.filter((item) => {
            return item.admin == true
        }).length, usersData.filter((item) => {
            return item.admin == false
        }).length,]
    });
    const countryCount = new ApexCharts(document.querySelector("#countryCount"), {
        chart: {
            type: 'pie'
        },
        series: [country.length]
    });
    const historyCount = new ApexCharts(document.querySelector("#historyCount"), {
        chart: {
            type: 'pie'
        },
        series: [history.length]
    });

    historyData.render()
    commonData.render()
    count.render()
    users.render()
    countryCount.render()
    historyCount.render()
</script>
</body>
</html>